1.空指针异常 原因：没有@Autowired注解
2.ftl的下拉框动态数据库取值 原因：ftl前台遍历map与jsp不同
3.java.lang.StackOverflowError: null 栈溢出 原因：双向调用（role user resouce实体类中的属性）无限调用toString 方法
JPA我觉得是一个封装的很棒的框架，至于说很臃肿这个事，我觉得在需求需要很多复杂查询的时候，不适合用JPA。因为它的封装太棒了，以致于增强了表和实体类之间的耦合。不过在一些简单查询的部分，它真的太好用了。
而关于这个Bug，就不单单是JPA自身的问题了，究其原因是我在实体类中，使用了lombok框架的@Data，这是一个使用注解，在编译时修改语法树并且自动生成Getter、Setter方法并且会实现toString，和hashCode方法得一个框架。其实这个本身也没问题，而且我一直觉得很好用。
可是当这两个因素合在一起的时候，出现了问题。因为在实体类中存在多对多的关联关系，因此实体类A在实例化的时候，会实例化实体类B并调用它的toString和hashCode。可是在实体B实例化的时候，又会实例化对应的A并调用它的toString和hashCode。是的，你猜的没错，这是一个没有结束条件的递归，也可以叫死递归。会出现什么情况呢，简单来说就是一个StackOverflow。

 解决办法 ：当查询出列表时，手动将多对多的哪一个值设置为null；
4.springdatajpa的模糊查询。 学习jpa技术文档，百度封装方法。

5.条件查询，当在第n页的时候去查询相关部门所的员工，此时数据查询为空。查询的时候把page也给传到后台来了
6.freemarker模板 map中只能传String类型的数据
